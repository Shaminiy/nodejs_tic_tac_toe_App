pipeline:
  name: shamini-tictactoe-CD
  identifier: shaminitictactoeCD
  projectIdentifier: SFTY_Training
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: blue-green-deployment
        identifier: deploygreenv2
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          environment:
            environmentRef: Shamini_tictactoe_test_env
            deployToAll: false
            infrastructureDefinitions:
              - identifier: shamini_tictactoe_infra
          execution:
            steps:
              - step:
                  name: Stage Deployment
                  identifier: stageDeployment
                  type: K8sBlueGreenDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
              - step:
                  type: ShellScript
                  name: gatekeeper
                  identifier: gatekeeper
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: |-
                          # Read the runtime input variable
                          USER_CHOICE="<+pipeline.variables.SKIP_NEXT_STEP>"

                          # Set an output variable for the next step based on the input
                          # If user sets SKIP_NEXT_STEP to "false", then we should NOT skip the next step (so should_skip=false).
                          if [[ "$USER_CHOICE" == "false" ]]; then
                            echo "User chose to PROCEED. The next step will RUN."
                            export SHOULD_SKIP_NEXT_STEP=false
                          else
                            echo "User chose to SKIP. The next step will be skipped."
                            export SHOULD_SKIP_NEXT_STEP=true
                          fi
                    environmentVariables: []
                    outputVariables:
                      - name: should_skip
                        type: String
                        value: SHOULD_SKIP_NEXT_STEP
                  timeout: 10m
              - step:
                  name: Swap primary with stage service
                  identifier: bgSwapServices
                  type: K8sBGSwapServices
                  timeout: 10m
                  spec:
                    skipDryRun: false
                  when:
                    stageStatus: Success
                    condition: <+execution.steps.manual_gatekeeper.output.outputVariables.should_skip> == "true"
            rollbackSteps:
              - step:
                  name: Swap primary with stage service
                  identifier: rollbackBgSwapServices
                  type: K8sBGSwapServices
                  timeout: 10m
                  spec:
                    skipDryRun: false
          service:
            serviceRef: shamini_tic_tac_toe_app
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  artifacts:
                    primary:
                      primaryArtifactRef: <+input>
                      sources: <+input>
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        variables:
          - name: SKIP_NEXT_STEP
            type: String
            description: ""
            required: true
            value: <+input>.executionInput().selectOneFrom(true,false)
  allowStageExecutions: true
